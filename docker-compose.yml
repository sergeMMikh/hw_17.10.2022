version: "3.9"

networks:
  stocks_products_net:

services:
  web:
    build: .
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    networks:
      -   stocks_products_net
    volumes:
      - .:/code
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      - postgres
      - migration

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: "netology_stocks_products"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "secret"
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    networks:
      - stocks_products_net
    volumes:
      - ./logs:/var/log
      - .:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready - U smm -d new_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  migration:
    image: postgres
    command: python manage.py makemigrations &&
      python manage.py migrate --noinput
    volumes:
      - .:/code
    depends_on:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "s.m.mih@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "vrag"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/log/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
    networks:
      - stocks_products_net
  nginx_int:
    image: nginx
    networks:
      - stocks_products_net






